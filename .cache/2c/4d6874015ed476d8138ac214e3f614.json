{"id":"RkDi","dependencies":[{"name":"/home/waat/CodingHope/package.json","includedInParent":true,"mtime":1633099653976},{"name":"/home/waat/CodingHope/node_modules/regex-not/package.json","includedInParent":true,"mtime":1633102738916},{"name":"extend-shallow","loc":{"line":3,"column":21},"parent":"/home/waat/CodingHope/node_modules/regex-not/index.js","resolved":"/home/waat/CodingHope/node_modules/extend-shallow/index.js"},{"name":"safe-regex","loc":{"line":4,"column":19},"parent":"/home/waat/CodingHope/node_modules/regex-not/index.js","resolved":"/home/waat/CodingHope/node_modules/safe-regex/index.js"}],"generated":{"js":"\"use strict\";var e=require(\"extend-shallow\"),r=require(\"safe-regex\");function t(e,r){return new RegExp(t.create(e,r))}t.create=function(t,n){if(\"string\"!=typeof t)throw new TypeError(\"expected a string\");var a=e({},n);!0===a.contains&&(a.strictNegate=!1);var s=!1!==a.strictOpen?\"^\":\"\",i=!1!==a.strictClose?\"$\":\"\",o=a.endChar?a.endChar:\"+\",c=s+(!1===a.strictNegate?\"(?:(?!(?:\"+t+\")).)\"+o:\"(?:(?!^(?:\"+t+\")$).)\"+o)+i;if(!0===a.safe&&!1===r(c))throw new Error(\"potentially unsafe regular expression: \"+c);return c},module.exports=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/regex-not/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/regex-not/index.js","original":{"line":3,"column":0},"generated":{"line":1,"column":13}},{"source":"../node_modules/regex-not/index.js","name":"extend","original":{"line":3,"column":4},"generated":{"line":1,"column":17}},{"source":"../node_modules/regex-not/index.js","name":"require","original":{"line":3,"column":13},"generated":{"line":1,"column":19}},{"source":"../node_modules/regex-not/index.js","original":{"line":3,"column":21},"generated":{"line":1,"column":27}},{"source":"../node_modules/regex-not/index.js","name":"safe","original":{"line":4,"column":4},"generated":{"line":1,"column":45}},{"source":"../node_modules/regex-not/index.js","name":"require","original":{"line":4,"column":11},"generated":{"line":1,"column":47}},{"source":"../node_modules/regex-not/index.js","original":{"line":4,"column":19},"generated":{"line":1,"column":55}},{"source":"../node_modules/regex-not/index.js","original":{"line":21,"column":0},"generated":{"line":1,"column":69}},{"source":"../node_modules/regex-not/index.js","name":"toRegex","original":{"line":21,"column":9},"generated":{"line":1,"column":78}},{"source":"../node_modules/regex-not/index.js","name":"pattern","original":{"line":21,"column":17},"generated":{"line":1,"column":80}},{"source":"../node_modules/regex-not/index.js","name":"options","original":{"line":21,"column":26},"generated":{"line":1,"column":82}},{"source":"../node_modules/regex-not/index.js","original":{"line":22,"column":9},"generated":{"line":1,"column":85}},{"source":"../node_modules/regex-not/index.js","original":{"line":22,"column":9},"generated":{"line":1,"column":92}},{"source":"../node_modules/regex-not/index.js","name":"RegExp","original":{"line":22,"column":13},"generated":{"line":1,"column":96}},{"source":"../node_modules/regex-not/index.js","name":"toRegex","original":{"line":22,"column":20},"generated":{"line":1,"column":103}},{"source":"../node_modules/regex-not/index.js","name":"create","original":{"line":22,"column":28},"generated":{"line":1,"column":105}},{"source":"../node_modules/regex-not/index.js","name":"pattern","original":{"line":22,"column":35},"generated":{"line":1,"column":112}},{"source":"../node_modules/regex-not/index.js","name":"options","original":{"line":22,"column":44},"generated":{"line":1,"column":114}},{"source":"../node_modules/regex-not/index.js","name":"toRegex","original":{"line":39,"column":0},"generated":{"line":1,"column":118}},{"source":"../node_modules/regex-not/index.js","name":"create","original":{"line":39,"column":8},"generated":{"line":1,"column":120}},{"source":"../node_modules/regex-not/index.js","original":{"line":39,"column":17},"generated":{"line":1,"column":127}},{"source":"../node_modules/regex-not/index.js","name":"pattern","original":{"line":39,"column":26},"generated":{"line":1,"column":136}},{"source":"../node_modules/regex-not/index.js","name":"options","original":{"line":39,"column":35},"generated":{"line":1,"column":138}},{"source":"../node_modules/regex-not/index.js","original":{"line":40,"column":6},"generated":{"line":1,"column":141}},{"source":"../node_modules/regex-not/index.js","original":{"line":40,"column":25},"generated":{"line":1,"column":144}},{"source":"../node_modules/regex-not/index.js","name":"pattern","original":{"line":40,"column":13},"generated":{"line":1,"column":161}},{"source":"../node_modules/regex-not/index.js","original":{"line":41,"column":10},"generated":{"line":1,"column":163}},{"source":"../node_modules/regex-not/index.js","original":{"line":41,"column":10},"generated":{"line":1,"column":169}},{"source":"../node_modules/regex-not/index.js","name":"TypeError","original":{"line":41,"column":14},"generated":{"line":1,"column":173}},{"source":"../node_modules/regex-not/index.js","original":{"line":41,"column":24},"generated":{"line":1,"column":183}},{"source":"../node_modules/regex-not/index.js","name":"opts","original":{"line":44,"column":6},"generated":{"line":1,"column":204}},{"source":"../node_modules/regex-not/index.js","name":"opts","original":{"line":44,"column":6},"generated":{"line":1,"column":208}},{"source":"../node_modules/regex-not/index.js","name":"extend","original":{"line":44,"column":13},"generated":{"line":1,"column":210}},{"source":"../node_modules/regex-not/index.js","original":{"line":44,"column":20},"generated":{"line":1,"column":212}},{"source":"../node_modules/regex-not/index.js","name":"options","original":{"line":44,"column":24},"generated":{"line":1,"column":215}},{"source":"../node_modules/regex-not/index.js","original":{"line":45,"column":24},"generated":{"line":1,"column":219}},{"source":"../node_modules/regex-not/index.js","name":"opts","original":{"line":45,"column":6},"generated":{"line":1,"column":223}},{"source":"../node_modules/regex-not/index.js","name":"contains","original":{"line":45,"column":11},"generated":{"line":1,"column":225}},{"source":"../node_modules/regex-not/index.js","name":"opts","original":{"line":46,"column":4},"generated":{"line":1,"column":236}},{"source":"../node_modules/regex-not/index.js","name":"strictNegate","original":{"line":46,"column":9},"generated":{"line":1,"column":238}},{"source":"../node_modules/regex-not/index.js","original":{"line":46,"column":24},"generated":{"line":1,"column":252}},{"source":"../node_modules/regex-not/index.js","name":"open","original":{"line":49,"column":6},"generated":{"line":1,"column":255}},{"source":"../node_modules/regex-not/index.js","name":"open","original":{"line":49,"column":6},"generated":{"line":1,"column":259}},{"source":"../node_modules/regex-not/index.js","original":{"line":49,"column":33},"generated":{"line":1,"column":262}},{"source":"../node_modules/regex-not/index.js","name":"opts","original":{"line":49,"column":13},"generated":{"line":1,"column":266}},{"source":"../node_modules/regex-not/index.js","name":"strictOpen","original":{"line":49,"column":18},"generated":{"line":1,"column":268}},{"source":"../node_modules/regex-not/index.js","original":{"line":49,"column":41},"generated":{"line":1,"column":279}},{"source":"../node_modules/regex-not/index.js","original":{"line":49,"column":47},"generated":{"line":1,"column":283}},{"source":"../node_modules/regex-not/index.js","name":"close","original":{"line":50,"column":6},"generated":{"line":1,"column":286}},{"source":"../node_modules/regex-not/index.js","original":{"line":50,"column":35},"generated":{"line":1,"column":289}},{"source":"../node_modules/regex-not/index.js","name":"opts","original":{"line":50,"column":14},"generated":{"line":1,"column":293}},{"source":"../node_modules/regex-not/index.js","name":"strictClose","original":{"line":50,"column":19},"generated":{"line":1,"column":295}},{"source":"../node_modules/regex-not/index.js","original":{"line":50,"column":43},"generated":{"line":1,"column":307}},{"source":"../node_modules/regex-not/index.js","original":{"line":50,"column":49},"generated":{"line":1,"column":311}},{"source":"../node_modules/regex-not/index.js","name":"endChar","original":{"line":51,"column":6},"generated":{"line":1,"column":314}},{"source":"../node_modules/regex-not/index.js","name":"opts","original":{"line":51,"column":16},"generated":{"line":1,"column":316}},{"source":"../node_modules/regex-not/index.js","name":"endChar","original":{"line":51,"column":21},"generated":{"line":1,"column":318}},{"source":"../node_modules/regex-not/index.js","name":"opts","original":{"line":51,"column":31},"generated":{"line":1,"column":326}},{"source":"../node_modules/regex-not/index.js","name":"endChar","original":{"line":51,"column":36},"generated":{"line":1,"column":328}},{"source":"../node_modules/regex-not/index.js","original":{"line":51,"column":46},"generated":{"line":1,"column":336}},{"source":"../node_modules/regex-not/index.js","name":"res","original":{"line":60,"column":6},"generated":{"line":1,"column":340}},{"source":"../node_modules/regex-not/index.js","name":"open","original":{"line":60,"column":12},"generated":{"line":1,"column":342}},{"source":"../node_modules/regex-not/index.js","original":{"line":54,"column":28},"generated":{"line":1,"column":346}},{"source":"../node_modules/regex-not/index.js","name":"opts","original":{"line":54,"column":6},"generated":{"line":1,"column":350}},{"source":"../node_modules/regex-not/index.js","name":"strictNegate","original":{"line":54,"column":11},"generated":{"line":1,"column":352}},{"source":"../node_modules/regex-not/index.js","original":{"line":55,"column":10},"generated":{"line":1,"column":365}},{"source":"../node_modules/regex-not/index.js","name":"pattern","original":{"line":55,"column":24},"generated":{"line":1,"column":377}},{"source":"../node_modules/regex-not/index.js","original":{"line":55,"column":34},"generated":{"line":1,"column":379}},{"source":"../node_modules/regex-not/index.js","name":"endChar","original":{"line":55,"column":43},"generated":{"line":1,"column":386}},{"source":"../node_modules/regex-not/index.js","original":{"line":57,"column":10},"generated":{"line":1,"column":388}},{"source":"../node_modules/regex-not/index.js","name":"pattern","original":{"line":57,"column":25},"generated":{"line":1,"column":401}},{"source":"../node_modules/regex-not/index.js","original":{"line":57,"column":35},"generated":{"line":1,"column":403}},{"source":"../node_modules/regex-not/index.js","name":"endChar","original":{"line":57,"column":45},"generated":{"line":1,"column":411}},{"source":"../node_modules/regex-not/index.js","name":"close","original":{"line":60,"column":25},"generated":{"line":1,"column":414}},{"source":"../node_modules/regex-not/index.js","name":"opts","original":{"line":61,"column":6},"generated":{"line":1,"column":416}},{"source":"../node_modules/regex-not/index.js","original":{"line":61,"column":20},"generated":{"line":1,"column":420}},{"source":"../node_modules/regex-not/index.js","name":"opts","original":{"line":61,"column":6},"generated":{"line":1,"column":424}},{"source":"../node_modules/regex-not/index.js","name":"safe","original":{"line":61,"column":11},"generated":{"line":1,"column":426}},{"source":"../node_modules/regex-not/index.js","original":{"line":61,"column":42},"generated":{"line":1,"column":433}},{"source":"../node_modules/regex-not/index.js","name":"safe","original":{"line":61,"column":28},"generated":{"line":1,"column":437}},{"source":"../node_modules/regex-not/index.js","name":"res","original":{"line":61,"column":33},"generated":{"line":1,"column":439}},{"source":"../node_modules/regex-not/index.js","original":{"line":62,"column":10},"generated":{"line":1,"column":442}},{"source":"../node_modules/regex-not/index.js","original":{"line":62,"column":10},"generated":{"line":1,"column":448}},{"source":"../node_modules/regex-not/index.js","name":"Error","original":{"line":62,"column":14},"generated":{"line":1,"column":452}},{"source":"../node_modules/regex-not/index.js","original":{"line":62,"column":20},"generated":{"line":1,"column":458}},{"source":"../node_modules/regex-not/index.js","name":"res","original":{"line":62,"column":64},"generated":{"line":1,"column":500}},{"source":"../node_modules/regex-not/index.js","name":"res","original":{"line":65,"column":9},"generated":{"line":1,"column":503}},{"source":"../node_modules/regex-not/index.js","name":"res","original":{"line":65,"column":9},"generated":{"line":1,"column":510}},{"source":"../node_modules/regex-not/index.js","name":"module","original":{"line":72,"column":0},"generated":{"line":1,"column":513}},{"source":"../node_modules/regex-not/index.js","name":"exports","original":{"line":72,"column":7},"generated":{"line":1,"column":520}},{"source":"../node_modules/regex-not/index.js","name":"toRegex","original":{"line":72,"column":17},"generated":{"line":1,"column":528}}],"sources":{"../node_modules/regex-not/index.js":"'use strict';\n\nvar extend = require('extend-shallow');\nvar safe = require('safe-regex');\n\n/**\n * The main export is a function that takes a `pattern` string and an `options` object.\n *\n * ```js\n & var not = require('regex-not');\n & console.log(not('foo'));\n & //=> /^(?:(?!^(?:foo)$).)*$/\n * ```\n *\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {RegExp} Converts the given `pattern` to a regex using the specified `options`.\n * @api public\n */\n\nfunction toRegex(pattern, options) {\n  return new RegExp(toRegex.create(pattern, options));\n}\n\n/**\n * Create a regex-compatible string from the given `pattern` and `options`.\n *\n * ```js\n & var not = require('regex-not');\n & console.log(not.create('foo'));\n & //=> '^(?:(?!^(?:foo)$).)*$'\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {String}\n * @api public\n */\n\ntoRegex.create = function(pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  var opts = extend({}, options);\n  if (opts.contains === true) {\n    opts.strictNegate = false;\n  }\n\n  var open = opts.strictOpen !== false ? '^' : '';\n  var close = opts.strictClose !== false ? '$' : '';\n  var endChar = opts.endChar ? opts.endChar : '+';\n  var str = pattern;\n\n  if (opts.strictNegate === false) {\n    str = '(?:(?!(?:' + pattern + ')).)' + endChar;\n  } else {\n    str = '(?:(?!^(?:' + pattern + ')$).)' + endChar;\n  }\n\n  var res = open + str + close;\n  if (opts.safe === true && safe(res) === false) {\n    throw new Error('potentially unsafe regular expression: ' + res);\n  }\n\n  return res;\n};\n\n/**\n * Expose `toRegex`\n */\n\nmodule.exports = toRegex;\n"},"lineCount":null}},"error":null,"hash":"540bb2f1ce14576b4e78931955d402de","cacheData":{"env":{}}}