{"id":"AqXq","dependencies":[{"name":"/home/waat/CodingHope/package.json","includedInParent":true,"mtime":1633099653976},{"name":"/home/waat/CodingHope/node_modules/@mrmlnc/readdir-enhanced/package.json","includedInParent":true,"mtime":1633102741126}],"generated":{"js":"\"use strict\";function o(o,t,c){o.forEach(o=>{t(o,()=>{})}),c()}module.exports=o;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":12,"column":0},"generated":{"line":1,"column":13}},{"source":"../node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","name":"syncForEach","original":{"line":12,"column":9},"generated":{"line":1,"column":22}},{"source":"../node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","name":"array","original":{"line":12,"column":22},"generated":{"line":1,"column":24}},{"source":"../node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","name":"iterator","original":{"line":12,"column":29},"generated":{"line":1,"column":26}},{"source":"../node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","name":"done","original":{"line":12,"column":39},"generated":{"line":1,"column":28}},{"source":"../node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","name":"array","original":{"line":13,"column":2},"generated":{"line":1,"column":31}},{"source":"../node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","name":"forEach","original":{"line":13,"column":8},"generated":{"line":1,"column":33}},{"source":"../node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","name":"item","original":{"line":13,"column":16},"generated":{"line":1,"column":41}},{"source":"../node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","name":"iterator","original":{"line":14,"column":4},"generated":{"line":1,"column":45}},{"source":"../node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","name":"item","original":{"line":14,"column":13},"generated":{"line":1,"column":47}},{"source":"../node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":14,"column":19},"generated":{"line":1,"column":49}},{"source":"../node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","name":"done","original":{"line":21,"column":2},"generated":{"line":1,"column":59}},{"source":"../node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","name":"module","original":{"line":3,"column":0},"generated":{"line":1,"column":63}},{"source":"../node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","name":"exports","original":{"line":3,"column":7},"generated":{"line":1,"column":70}},{"source":"../node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","name":"syncForEach","original":{"line":3,"column":17},"generated":{"line":1,"column":78}}],"sources":{"../node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js":"'use strict';\n\nmodule.exports = syncForEach;\n\n/**\n * A facade that allows {@link Array.forEach} to be called as though it were asynchronous.\n *\n * @param {array} array - The array to iterate over\n * @param {function} iterator - The function to call for each item in the array\n * @param {function} done - The function to call when all iterators have completed\n */\nfunction syncForEach (array, iterator, done) {\n  array.forEach(item => {\n    iterator(item, () => {\n      // Note: No error-handling here because this is currently only ever called\n      // by DirectoryReader, which never passes an `error` parameter to the callback.\n      // Instead, DirectoryReader emits an \"error\" event if an error occurs.\n    });\n  });\n\n  done();\n}\n"},"lineCount":null}},"error":null,"hash":"5b83317cca673668e74769381dd95c36","cacheData":{"env":{}}}